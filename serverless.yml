service: products-service

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  profile: personalAccount

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-openapi-documentation
  - serverless-jest-plugin

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

  documentation:
    version: '1'
    title: 'My API'
    description: 'This is my API'
    models:
      - name: "Products"
        description: "List of Products"
        contentType: "application/json"
        schema:
          $schema: "http://json-schema.org/draft-04/schema#"
          properties:
            SomeObject:
              type: "array"
              properties:
                count:
                  type: "number"
                description:
                  type: "string"
                id:
                  type: "string"
                price:
                  type: "number"
                title:
                  type: "string"
      - name: "ErrorResponse"
        description: "This is an error"
        contentType: "application/json"
        schema:
          $schema: "http://json-schema.org/draft-04/schema#"
          properties:
            SomeObject:
              type: "object"
              properties:
                message:
                  type: "string"
                statusCode:
                  type: "string"

resources:
  Resources:
    Stocks:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Stocks
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: product_id
            AttributeType: S
        KeySchema:
          - AttributeName: product_id
            KeyType: HASH
    Products:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Products
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

functions:
  getProducts:
    handler: products/products.getProducts
    events:
      - http:
          path: /products
          method: get
          cors: true
          documentation:
            summary: "Get products"
            description: "Get list of products"
            methodResponses:
              - statusCode: 201
                responseBody:
                  description: "Array of products"
                responseModels:
                  application/json: "Products"
              - statusCode: 404
                responseBody:
                  description: "An error message when Products not found"
                responseModels:
                  application/json: "ErrorResponse"
              - statusCode: 500
                responseBody:
                  description: "An error message when getting Products"
                responseModels:
                  application/json: "ErrorResponse"
  getProductById:
    handler: product-by-id/product-by-id.getProductById
    events:
      - http:
          path: /product/{id}
          method: GET
          cors: true
          documentation:
            summary: "Get product"
            description: "Get product by it"
            pathParams:
              - name: id
                description: Id of product
                schema:
                  type: string
                  pattern: "^[-a-z0-9_]+$"
            methodResponses:
              - statusCode: 201
                responseBody:
                  description: "Product"
                responseModels:
                  application/json: "Product"
              - statusCode: 404
                responseBody:
                  description: "An error message when Product not found"
                responseModels:
                  application/json: "ErrorResponse"
              - statusCode: 500
                responseBody:
                  description: "An error message when getting Product"
                responseModels:
                  application/json: "ErrorResponse"
